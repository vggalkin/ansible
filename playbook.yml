---
- hosts: app
  become: yes
  remote_user: ansible
  tasks:
    - name: UBUNTU - Install packages to use repo over https
      package: name={{ item }} state=latest update_cache=yes
      loop: ['ca-certificates', 'curl', 'gnupg', 'lsb-release']
      when: ansible_distribution == "Ubuntu"
    - name: UBUNTU - Add Dockers official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: UBUNTU - Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_distribution == 'Ubuntu'
    - name: CENTOS - Install yum-utils
      yum:
        name: yum-utils
        state: latest
        update_cache: yes
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"
    - name: CENTOS - Add Docker repository
      yum_repository:
        name: docker
        description: Repo for Docker
        baseurl: https://download.docker.com/linux/centos/8/x86_64/stable/
        gpgcheck: no
      when: ansible_distribution == "CentOS"
    - name: Install Docker
      package: name={{ item }} state=latest
      loop: ['docker-ce', 'docker-ce-cli','containerd.io']
    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

- hosts: database
  become: yes
  remote_user: ansible
  tasks:
    - name: Install ca-certificates
      apt:
        name: ca-certificates
        state: latest
    - name: Add GPG key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present
    - name: Add PostgreSql repository
      apt_repository: 
        repo: deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main
        state: present
    - name: Install PostgreSql
      package: name={{ item }} state=latest update_cache=yes
      loop: ["postgresql-{{ postgresql_ver }}", 'postgresql-contrib']
      notify:
        - Stop postgresql
    - name: Create directory for database
      file:
        path: /opt/postgresql
        state: directory 
    - name: Rsync database
      command: rsync -av /var/lib/postgresql /opt
    - name: Change database direcory
      lineinfile:
        path: "/etc/postgresql/{{ postgresql_ver }}/main/postgresql.conf"
        regexp: "data_directory ="
        line: "data_directory = '{{ postgresql_data }}{{ postgresql_ver }}/main'"
        backrefs: yes
      notify: Start postgresql
    
  handlers:
    - name: Stop postgresql
      service:
        name: postgresql
        state: stop
    - name: Start postgresql
      service:
        name: postgresql
        state: started
